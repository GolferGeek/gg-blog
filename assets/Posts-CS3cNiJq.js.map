{"version":3,"file":"Posts-CS3cNiJq.js","sources":["../../src/contexts/SiteProfileContext.jsx","../../src/pages/Posts.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { supabase } from '../lib/supabase'\nimport { useAuth } from './AuthContext'\n\nconst SiteProfileContext = createContext({})\n\nexport function SiteProfileProvider({ children }) {\n  const [siteProfile, setSiteProfile] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const { username } = useParams()\n  const navigate = useNavigate()\n  const { user } = useAuth()\n  const defaultUsername = import.meta.env.VITE_DEFAULT_USERNAME\n  const [retryCount, setRetryCount] = useState(0)\n\n  console.log('SiteProfileProvider - Current username:', username)\n  console.log('SiteProfileProvider - Default username:', defaultUsername)\n\n  const fetchProfile = async (username) => {\n    console.log('fetchProfile called with username:', username)\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('username', username)\n        .maybeSingle()\n\n      console.log('Profile query result:', { data, error })\n\n      if (error) throw error\n\n      if (!data) {\n        console.log('No profile found for username:', username)\n        // Create a default profile object instead of redirecting\n        const defaultProfile = {\n          username: username,\n          site_name: username === defaultUsername ? 'GolferGeek Blog' : `${username}'s Blog`,\n          id: user?.id || null\n        }\n        setSiteProfile(defaultProfile)\n        return\n      }\n\n      console.log('Setting site profile:', data)\n      setSiteProfile(data)\n    } catch (error) {\n      console.error('Error fetching site profile:', error)\n      // Create a default profile on error instead of redirecting\n      const defaultProfile = {\n        username: username || defaultUsername,\n        site_name: username === defaultUsername ? 'GolferGeek Blog' : `${username}'s Blog`,\n        id: user?.id || null\n      }\n      setSiteProfile(defaultProfile)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    console.log('SiteProfileProvider useEffect triggered')\n    console.log('Current username:', username)\n    console.log('Default username:', defaultUsername)\n    \n    if (!username && !defaultUsername) {\n      console.log('No username or default username available')\n      setLoading(false)\n      return\n    }\n    \n    const profileUsername = username || defaultUsername\n    console.log('Loading profile for:', profileUsername)\n    setLoading(true)\n    setRetryCount(0)\n    fetchProfile(profileUsername)\n  }, [username, user?.id])\n\n  const isOwner = () => {\n    if (!user || !siteProfile) return false\n    return user.id === siteProfile.id\n  }\n\n  const value = {\n    siteProfile,\n    loading,\n    isOwner,\n    fetchProfile,\n    defaultUsername\n  }\n\n  return (\n    <SiteProfileContext.Provider value={value}>\n      {children}\n    </SiteProfileContext.Provider>\n  )\n}\n\nexport function useSiteProfile() {\n  return useContext(SiteProfileContext)\n}\n","import { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { \n  Box, \n  Container, \n  Typography, \n  Button, \n  TextField,\n  Paper,\n  IconButton,\n  InputAdornment,\n  Pagination,\n  CircularProgress\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { supabase } from '../lib/supabase'\nimport { useAuth } from '../contexts/AuthContext'\nimport { useSiteProfile } from '../contexts/SiteProfileContext'\nimport ConfirmModal from '../components/ConfirmModal'\n\nfunction Posts() {\n  const navigate = useNavigate()\n  const { user } = useAuth()\n  const { siteProfile, loading: profileLoading } = useSiteProfile()\n  const [posts, setPosts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [page, setPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(0)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [postToDelete, setPostToDelete] = useState(null)\n  const postsPerPage = 10\n\n  console.log('Component rendered with user details:', {\n    userId: user?.id,\n    userEmail: user?.email,\n    userMetadata: user?.user_metadata,\n    siteProfileId: siteProfile?.id,\n    loading,\n    postsLength: posts.length\n  })\n\n  const fetchPosts = async () => {\n    try {\n      console.log('Fetching posts for user:', {\n        userId: user?.id,\n        userEmail: user?.email\n      })\n      setLoading(true)\n      \n      if (!user?.id) {\n        console.log('No user ID available')\n        setLoading(false)\n        return\n      }\n\n      let query = supabase\n        .from('posts')\n        .select('*', { count: 'exact' })\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n\n      if (searchTerm) {\n        query = query.or(`title.ilike.%${searchTerm}%,content.ilike.%${searchTerm}%`)\n      }\n\n      // Calculate pagination\n      const from = (page - 1) * postsPerPage\n      const to = from + postsPerPage - 1\n\n      query = query.range(from, to)\n\n      const { data, count, error } = await query\n\n      if (error) throw error\n\n      console.log('Posts fetched:', data)\n      setPosts(data || [])\n      setTotalPages(Math.ceil((count || 0) / postsPerPage))\n    } catch (error) {\n      console.error('Error fetching posts:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    console.log('useEffect triggered with:', {\n      userId: user?.id,\n      hasUser: !!user,\n      loading\n    })\n    if (user?.id) {\n      fetchPosts()\n    }\n  }, [user?.id, page, searchTerm])\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value)\n    setPage(1) // Reset to first page when searching\n  }\n\n  const handlePageChange = (event, value) => {\n    setPage(value)\n  }\n\n  const handleDeleteClick = (post) => {\n    setPostToDelete(post)\n    setShowDeleteModal(true)\n  }\n\n  const handleDeleteConfirm = async () => {\n    if (!postToDelete) return\n\n    try {\n      const { error: imageError } = await supabase\n        .from('images')\n        .delete()\n        .eq('post_id', postToDelete.id)\n\n      if (imageError) throw imageError\n\n      const { error: postError } = await supabase\n        .from('posts')\n        .delete()\n        .eq('id', postToDelete.id)\n\n      if (postError) throw postError\n\n      setPosts(posts.filter(p => p.id !== postToDelete.id))\n      setShowDeleteModal(false)\n      setPostToDelete(null)\n    } catch (error) {\n      console.error('Error deleting post:', error)\n    }\n  }\n\n  if (loading || profileLoading) {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Manage Posts\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => navigate('/create')}\n        >\n          Create Post\n        </Button>\n      </Box>\n\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        placeholder=\"Search posts...\"\n        value={searchTerm}\n        onChange={handleSearch}\n        sx={{ mb: 4 }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      {posts.map((post) => (\n        <Paper key={post.id} sx={{ p: 2, mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n          <Box>\n            <Typography variant=\"h6\" component=\"h2\" sx={{ cursor: 'pointer' }} onClick={() => navigate(`/post/${post.id}`)}>\n              {post.title}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Last updated: {new Date(post.updated_at).toLocaleDateString()}\n            </Typography>\n          </Box>\n          <Box>\n            <IconButton onClick={() => handleDeleteClick(post)} color=\"error\">\n              <DeleteIcon />\n            </IconButton>\n          </Box>\n        </Paper>\n      ))}\n\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <Pagination\n          count={totalPages}\n          page={page}\n          onChange={handlePageChange}\n          color=\"primary\"\n        />\n      </Box>\n\n      <ConfirmModal\n        open={showDeleteModal}\n        onClose={() => {\n          setShowDeleteModal(false)\n          setPostToDelete(null)\n        }}\n        onConfirm={handleDeleteConfirm}\n        title=\"Delete Post\"\n        content=\"Are you sure you want to delete this post? This action cannot be undone.\"\n      />\n    </Container>\n  )\n}\n\nexport default Posts\n"],"names":["SiteProfileContext","createContext","useSiteProfile","useContext","Posts","navigate","useNavigate","user","useAuth","siteProfile","profileLoading","posts","setPosts","useState","loading","setLoading","searchTerm","setSearchTerm","page","setPage","totalPages","setTotalPages","showDeleteModal","setShowDeleteModal","postToDelete","setPostToDelete","postsPerPage","fetchPosts","query","supabase","from","to","data","count","error","useEffect","handleSearch","event","handlePageChange","value","handleDeleteClick","post","handleDeleteConfirm","imageError","postError","p","jsx","Box","CircularProgress","jsxs","Container","Typography","Button","TextField","InputAdornment","SearchIcon","Paper","IconButton","DeleteIcon","Pagination","ConfirmModal"],"mappings":"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"}